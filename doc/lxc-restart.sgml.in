<!--

lxc: linux Container library

(C) Copyright IBM Corp. 2007, 2008

Authors:
Daniel Lezcano <dlezcano at fr.ibm.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

-->

<!DOCTYPE refentry PUBLIC "-//Davenport//DTD DocBook V3.0//EN" [

<!ENTITY commonoptions SYSTEM "@builddir@/common_options.sgml">
<!ENTITY seealso SYSTEM "@builddir@/see_also.sgml">
]>

<refentry>

  <docinfo><date>@LXC_GENERATE_DATE@</date></docinfo>

  <refmeta>
    <refentrytitle>lxc-restart</refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo>IBM</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>lxc-restart</refname>

    <refpurpose>
      restart a container from a file (not implemented yet)
    </refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>lxc-restart</command>
      <arg choice="opt">-f <replaceable>config_file</replaceable></arg>
      <arg choice="opt">-s KEY=VAL</arg>
      <arg choice="req">--statefile=<replaceable>FILE</replaceable></arg>
      <arg choice="req">--statefd=<replaceable>FD</replaceable></arg>
      <arg choice="req">--name=<replaceable>NAME</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>

    <para>
      <command>lxc-restart</command> is a command
      to restart an application from the state read in the specified
      <replaceable>FILE</replaceable>, in a container with the
      identifier <replaceable>NAME</replaceable>.
      If the option <option>--pause</option>
      is specified, the application will be stopped after the
      restart just before resuming execution. The command
      <command>lxc-unfreeze</command> will be needed to resume its
      execution.
    </para>
  </refsect1>

  <refsect1>
    <title>Restart Options</title>

    <variablelist>
      <varlistentry>
	<term><option>-S, --statefile=<replaceable>FILE</replaceable></option></term>
	<listitem>
	  <para>
	    read the state of the container in this
	    <replaceable>FILE</replaceable>.
	    This option is exclusive with <option>--statefd</option> below.
	  </para>
	</listitem>
      </varlistentry>

	<varlistentry>
	<term><option>-d, --statefd=<replaceable>FD</replaceable></option></term>
	<listitem>
	  <para>
	    read the state of the container in this
	    <replaceable>FD</replaceable> file descriptor.
	    This option is exclusive with above <option>--statefile</option>.
	  </para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><option>-p</option></term>
	<listitem>
	  <para>
	    Pause container processes after restart. The container will be
	    stopped until you resume it with the lxc-unfreeze command.
	  </para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><option>-f, --rcfile=<replaceable>config_file</replaceable></option></term>
	<listitem>
	  <para>
	    Specify the configuration file to configure the
	    virtualization and isolation functionalities for the
	    container. This parameter should be specified if it was
	    specified for the <command>lxc-execute</command>
	    or <command>lxc-start</command> commands or if the
	    container configuration has to be changed at restart. The
	    latter may fail if the needed resources are not available
	    for the restart. If the container was created and
	    configured with <command>lxc-create</command>, this option
	    is not needed, the configuration will be automatically
	    found.
	  </para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term>
	  <option>-s <replaceable>KEY=VAL</replaceable></option>
	</term>
	<listitem>
	  <para>
	    Assign value <replaceable>VAL</replaceable> to configuration
	    variable <replaceable>KEY</replaceable>. This overrides any
	    assignment done in <replaceable>config_file</replaceable>.
	  </para>
	</listitem>
      </varlistentry>

    </variablelist>

  </refsect1>

  &commonoptions;

  <refsect1>
    <title>Examples</title>
    <para>
      To start a new container <literal>123</literal> computing decimals of pi
    </para>
    <programlisting>
      lxc-execute -n 123 -- pi1 -d 500000
      lxc-execute --name=123 -- pi1 -d 500000
    </programlisting>

    <para>
      to checkpoint the same container in <emphasis>dump-death</emphasis>
      mode
    </para>
    <programlisting>
      lxc-checkpoint -n 123 -S /share/123/chkpt1 -k
      lxc-checkpoint --name=123 --statefile=/share/123/chkpt1 -k
    </programlisting>

    <para>
      and to restart the same container with a different id
    </para>
    <programlisting>
      lxc-restart -n 200 -S /share/123/chkpt1
      lxc-restart --name=200 --statefile=/share/123/chkpt1
    </programlisting>

   </refsect1>

  <refsect1>
    <title>Notes</title>
    <para>Actually, this command does not operate. Its description
    helps to define a CLI api for future Checkpoint / Restart
    solution</para>
  </refsect1>

  &seealso;

  <refsect1>
    <title>Author</title>
    <para>Daniel Lezcano <email>daniel.lezcano@free.fr</email></para>
  </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
